###############################################################################
#                                                                             #
# Calypsi ISO C compiler for Motorola 68000                       version 5.6 #
#                                                       23/Dec/2024  23:50:24 #
# Command line: -l --speed -O2 -c -o console.o console.c                      #
#                                                                             #
###############################################################################

    \ 00000000                      .rtmodel version,"1"
    \ 00000000                      .rtmodel nearDataBase,"A4"
    \ 00000000                      .rtmodel core,"68000"
    \ 00000000                      .rtmodel codeModel,"large"
    \ 00000000                      .extern shifter_fb
0001                    // This is a file
0002
0003                    #include <stdint.h>
0004
0005                    extern  uint8_t * __attribute__((far)) shifter_fb;
0006
0007                    void console_cls(void) {
    \ 00000000                      .section code,text
    \ 00000000                      .public console_cls
    \ 00000000                      .align  2
    \ 00000000          console_cls:
0008                        int16_t i = 100-1;
    \ 00000000 7263                 moveq.l #99,d1
0009                        uint8_t *b = shifter_fb;
    \ 00000002 2079....             move.l  shifter_fb.l,a0
    \ 00000006 ....
    \ 00000008          `?L4`:
0010                       
0011                        do {
0012                            shifter_fb[i] = 0;
    \ 00000008 2279....             move.l  shifter_fb.l,a1
    \ 0000000c ....
    \ 0000000e 42311000             clr.b   (0,a1,d1.w)
0013                            *b++ = 0;
    \ 00000012 4218                 clr.b   (a0)+
0014                        } while (--i >= 0);
    \ 00000014 5341                 subq.w  #1,d1
    \ 00000016 3001                 move.w  d1,d0
    \ 00000018 6aee                 bpl.s   `?L4`
0015                    }
    \ 0000001a 4e75                 rts
0016
0017                    uint32_t truc;
    \ 00000000                      .section znear,bss
    \ 00000000                      .public truc
    \ 00000000                      .align  2
    \ 00000000          truc:       .space  4
0018
0019                    __attribute__((interrupt(0x0070)))
0020                    void some_irq_handler(void) {
    \ 00000000                      .section `$$interruptVector_0x00000070`,text
    \ 00000000                      .public some_irq_handler
    \ 00000000 ........             .long   some_irq_handler
    \ 00000000                      .section code,text
    \ 00000000                      .align  2
    \ 00000000          some_irq_handler:
    \ 00000000 2f00                 move.l  d0,-(sp)
0021                        *((uint16_t*)0xffff8240) = *((uint16_t*)0xffff8240)+1;
    \ 00000002 7001                 moveq.l #1,d0
    \ 00000004 d179ffff             add.w   d0,0xffff8240.l
    \ 00000008 8240
0022                    }
    \ 0000000a 201f                 move.l  (sp)+,d0
    \ 0000000c 4e73                 rte
0023
0024                    void _Stub_close(void) {
    \ 00000000                      .section code,text
    \ 00000000                      .public _Stub_close
    \ 00000000                      .align  2
    \ 00000000          _Stub_close:
0025                        // Do nothing
0026                    }
    \ 00000000 4e75                 rts

##########################
#                        #
# Memory sizes (decimal) #
#                        #
##########################

Executable               (Text): 48 bytes
Zero initialized __near   (BSS):  4 bytes
